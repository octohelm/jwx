/*
Package jwk GENERATED BY gengo:injectable
DON'T EDIT THIS FILE
*/
package jwk

import (
	context "context"
)

func (p *KeySet) InjectContext(ctx context.Context) context.Context {
	return KeySetProviderInjectContext(ctx, p)
}

func (v *KeySet) Init(ctx context.Context) error {
	if err := v.beforeInit(ctx); err != nil {
		return err
	}

	return nil
}

type contextKeySetProvider struct{}

func KeySetProviderFromContext(ctx context.Context) (KeySetProvider, bool) {
	if v, ok := ctx.Value(contextKeySetProvider{}).(KeySetProvider); ok {
		return v, true
	}
	return nil, false
}

func KeySetProviderInjectContext(ctx context.Context, tpe KeySetProvider) context.Context {
	return context.WithValue(ctx, contextKeySetProvider{}, tpe)
}
